Lesons SQL

SELECT - список_полей
FROM - список_таблиц
WHERE - ограничения_на_список_строк
GROUP BY - условия_группировки
HAVING - ограничения_на_строки_после_группировки
ORDER BY - порядок_сортировки
LIMIT - ограничение_количества_записей
BETWEEN - включает границы в интервал.
|| - объединять несколько значений в одно текстовое значение (конкатенация)
DESC - Чтобы отсортировать в обратном порядке
LIMIT - позволяет получить только часть строк от результата запроса. важно использовать также предложение ORDER BY
OFFSET - дополнение к LIMIT можно пропустить определенное количество строк из результата запроса. 
JOIN - 
SELECT *             -- выбрать все поля
  FROM city         -- из таблицы city
  JOIN timezone     -- присоединить таблицу timezone
    ON timezone.timezone_id = city.timezone_id
                     -- для каждой записи из city сопоставить запись 
                     -- из timezone с совпадающим timezone_id


NOW() текущее время на сервере
UPPER('name') приведение строки в верхний регистр
CONCAT('text1_', 'texst_2') объединять несколько значений в одно текстовое значение (конкатенация)
DISTINCT Для исключения повторяющихся строк


+ - сложение;
- - вычитание;
* - умножение;
/ - деление;
% - остаток от деления;
^ - возведение в степень;
! - факториал;
abs - модуль числа;
sqrt - квадратный корень.

AND - логическое И
OR - логическое ИЛИ
NOT - отрицание
IN - 
IS -
AS - для назначение столбцу псевдонима

А выполняются они в следующем порядке:
1.NOT
2.AND
3.OR

Операции сравнения

< - меньше;
> - больше;
<= - мельше или равно;
>= - больше или равно;
= - равно;
!= или
<> - не равно.

LIKE - можно использовать два спецсимвола
ILIKE - чтобы поиск был регистр-независимым с учётом текущей языковой среды.
ESCAPE - спецсимвол
_ - заменяет один любой символ;
% - заменяет любую последовательность символов (в том числе пустую)


--Найдите номер модели, скорость и размер жесткого диска для всех ПК
--стоимостью менее 500 дол. Вывести: model, speed и hd

SELECT Product.model, PC.speed, PC.hd
FROM Product, PC
WHERE Product.model = PC.model AND price < 500
--------------------------------------------------------------------
--Найдите производителей принтеров. Вывести: maker

SELECT maker 
FROM Product WHERE type='printer'
group by maker
--------------------------------------------------------------------
--Найдите номер модели, объем памяти и размеры экранов ПК-блокнотов, 
--цена которых превышает 1000 дол.

SELECT model,ram,screen FROM Laptop WHERE price > '1000'
--------------------------------------------------------------------
--Найдите все записи таблицы Printer для цветных принтеров.

SELECT * FROM printer WHERE color= 'y'
--------------------------------------------------------------------
--Найдите номер модели, скорость и размер жесткого диска ПК, 
--имеющих 12x или 24x CD и цену менее 600 дол.

SELECT model,speed,hd FROM PC 
WHERE (cd= '12x' or cd= '24x') AND (price < '600')
--------------------------------------------------------------------
--Для каждого производителя, выпускающего ПК-блокноты c объёмом жесткого
--диска не менее 10 Гбайт, найти скорости таких ПК-блокнотов. 
--Вывод: производитель, скорость.

SELECT DISTINCT maker,speed FROM product
JOIN laptop ON product.model = laptop.model WHERE hd >= 10
--------------------------------------------------------------------
--Найдите номера моделей и цены всех имеющихся в продаже продуктов 
--(любого типа) производителя B (латинская буква).

SELECT Product.model, price
FROM Product JOIN PC ON Product.model = PC.model
WHERE maker= 'B'
UNION
SELECT Product.model, price
FROM Product JOIN Laptop ON Product.model = Laptop.model
WHERE maker= 'B'
UNION
SELECT Product.model, price
FROM Product JOIN Printer ON Product.model = Printer.model
WHERE maker= 'B'
--------------------------------------------------------------------
--Найдите производителя, выпускающего ПК, но не ПК-блокноты.

SELECT DISTINCT maker FROM Product WHERE type= 'PC'
EXCEPT
SELECT DISTINCT maker FROM Product WHERE type= 'Laptop'
--------------------------------------------------------------------
--Найдите производителей ПК с процессором не менее 450 Мгц. 
--Вывести: Maker

SELECT DISTINCT Product.maker
FROM Product JOIN PC ON Product.model=PC.model
WHERE speed >= 450
--------------------------------------------------------------------
--Найдите модели принтеров, имеющих самую высокую цену. 
--Вывести: model, price

SELECT model,price FROM Printer 
WHERE price = (SELECT MAX (price) FROM Printer)
--------------------------------------------------------------------
--Найдите среднюю скорость ПК.

SELECT AVG(speed) AS SPEED FROM PC
--------------------------------------------------------------------
--Найдите среднюю скорость ПК-блокнотов, цена которых превышает 1000 дол.

SELECT AVG(speed) AS speed
FROM Laptop WHERE price > 1000
--------------------------------------------------------------------
--Найдите среднюю скорость ПК, выпущенных производителем A.

SELECT AVG(speed) AS speed 
FROM Product JOIN PC ON Product.model=PC.model
WHERE maker = 'A'
--------------------------------------------------------------------
--Из таблицы employee получи один столбец full_name в формате 'first_name last_name'

SELECT  CONCAT(first_name,' ', last_name) as full_name
FROM employee
--------------------------------------------------------------------
--Получи все поля из таблицы сотрудников employee с именем Сергей, у которых 
--идентификатор должности один из 'CEO', 'DIRECTOR', 'GENERAL_MANAGER'.

SELECT * 
	FROM employee
		WHERE (rank_id = 'CEO'
			OR rank_id = 'DIRECTOR'
			OR rank_id = 'GENERAL_MANAGER')
				AND first_name = 'Сергей'
--------------------------------------------------------------------
--Получи всю информацию об адресах магазина с кодом 100, находищихся не в Москве (city_id = 1).

SELECT * 
	FROM store_Address
		WHERE store_id = 100
			AND city_id <> 1 
--------------------------------------------------------------------
--Напиши запрос для получения информации о стоимости продуктов product_price со стоимостью, 
--попадающей в один из диапазонов: от 5000 до 15000 и от 30000 до 40000 включая концы отрезков.

SELECT * 
	FROM Product_price
		WHERE price BETWEEN 5000 AND 15000

UNION All

SELECT * 
	FROM Product_price
		WHERE price BETWEEN 30000 AND 40000
--------------------------------------------------------------------
--Напиши запрос для получения информации о сотрудниках employee занимающих должности,
--отличные от 'SELLER', 'MANAGER'.

SELECT * 
	FROM employee
		WHERE rank_id NOT IN ('SELLER','MANAGER'
--------------------------------------------------------------------
--Напиши запрос для получения информации о сотрудниках, фамилия которых начинается на 'М' и заканчивается на 'в':
--first_name - имя сотрудника;
--last_name - фамилия сотрудника.

SELECT first_name,last_name
    FROM Employee
        WHERE last_name LIKE 'М%в'
--------------------------------------------------------------------
--Получи информацию о адресах магазинов, в которых заполнены и часы работы, и телефон.

SELECT * 
    FROM Store_address
        WHERE opening_hours IS NOT NULL
            AND phone IS NOT NULL
--------------------------------------------------------------------
--Получи информацию о сотрудниках, отсортированную сначала по идентификатору магазина, 
--затем по должности в алфавитном порядке, а затем по фамилии в порядке, противоположном алфавитному:
--employee_id - идентификатор сотрудника;
--store_id - идентификатор магазина;
--rank_id - идентификатор должности;
--last_name - фамилия сотрудника.

SELECT employee_id,
       store_id,
       rank_id,
       last_name
        	FROM Employee
            	ORDER BY store_id,
                    	 rank_id,
                    	 last_name DESC
--------------------------------------------------------------------
--Получи информацию о стоимости первых 5 товаров с максимальной ценой.

SELECT *
    FROM Product_price
        ORDER BY price DESC
        LIMIT 5
--------------------------------------------------------------------
--Получи информацию о стоимости первых 5 товаров с максимальной ценой, пропустив первые 2.

SELECT *
    FROM Product_price
        ORDER BY price DESC
            LIMIT 5
            OFFSET 2
--------------------------------------------------------------------
--К таблице товаров product присоедини таблицу категорий товаров category 
--по идентификатору категории товаров. Обрати внимание на полученные столбцы в результате.

SELECT *
    FROM product
        JOIN category
            ON product.category_id = category.category_id
--------------------------------------------------------------------
--К таблице заказов purchase присоедини таблицу товаров заказа purchase_item по идентификатору
--заказ purchase_id. Выведи следующие данные:
--purchase_id   - идентификатор заказа;
--purchase_date - дата заказа;
--store_id      - идентификатор магазина;
--product_id    - идентификатор товара;
--total_price   - итоговая стоимость, равная количеству единиц товара умноженную на цену за единицу товара.
--Отсортируй результат сначала по идентификатору магазина, затем по дате заказа по убыванию.

SELECT pur.purchase_id,
       pur.purchase_date,
       pur.store_id,
       pur_it.product_id

FROM purchase pur
                JOIN purchase_item pur_it
                    ON pur.purchase_id = pur_it.purchase_id
                    ORDER BY store_id,
                               purchase_date DESC
--------------------------------------------------------------------
--


--------------------------------------------------------------------
--


--------------------------------------------------------------------
--


--------------------------------------------------------------------
--


--------------------------------------------------------------------
--


--------------------------------------------------------------------
--


--------------------------------------------------------------------
--


--------------------------------------------------------------------
--


--------------------------------------------------------------------
--


--------------------------------------------------------------------
--


--------------------------------------------------------------------
--


--------------------------------------------------------------------
--


--------------------------------------------------------------------
--


--------------------------------------------------------------------
--


--------------------------------------------------------------------
--


--------------------------------------------------------------------
--


--------------------------------------------------------------------
--


--------------------------------------------------------------------
--


--------------------------------------------------------------------
--


--------------------------------------------------------------------
--


--------------------------------------------------------------------
--


--------------------------------------------------------------------
--


--------------------------------------------------------------------
--


--------------------------------------------------------------------
--


--------------------------------------------------------------------
--


--------------------------------------------------------------------
--


--------------------------------------------------------------------
--


--------------------------------------------------------------------
--


--------------------------------------------------------------------
--


--------------------------------------------------------------------
--


--------------------------------------------------------------------
--


--------------------------------------------------------------------
--


--------------------------------------------------------------------
--


--------------------------------------------------------------------
--


--------------------------------------------------------------------
--


--------------------------------------------------------------------
--


--------------------------------------------------------------------
--


--------------------------------------------------------------------














