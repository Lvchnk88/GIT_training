  Поиск площади треугольника

a = int(input())
b = int(input())
c = int(input())
p = ( a + b + c )/2
print (((( p - a )*( p - b )*( p - c ))* p )**0.5)

----------------------------------------------------------
  Поиск площади прямоугольника 

a = int(input())
b = int(input())
print(a*b)

----------------------------------------------------------
  Поиск площади

r = int(input())
print(3.14*r**2)

----------------------------------------------------------
  На входе вертикально 3 числа на выходе
наибольшее наименьшее и другое

a = int(input())
b = int(input())
c = int(input())
if   a > b > c:
    print(a , c , b , sep='\n')
elif a > c > b:
    print(a , b , c , sep='\n')
elif b > c > a:
    print(b , a , c , sep='\n')
elif b > a > c:
    print(b , c , a , sep='\n')
elif c > a > b:
    print(c , b , a , sep='\n')
elif c > b > a:
    print(c , a , b , sep='\n')
elif a == b > c:
    print(a , c , b , sep='\n')    
elif b == c > a:
    print(b , a , c , sep='\n')    
elif c == a > b:
    print(c , b , a , sep='\n')
elif a < b > c:
    print(b , a , c , sep='\n')
elif b < c > a:
    print(c , b , a , sep='\n')
elif c < a > b:
    print(a , c , b , sep='\n')
elif a == b == c:
    print(a , b , c , sep='\n')

----------------------------------------------------------
  Поиск площади разных фигур

shape = str(input())
if shape == 'треугольник':
    a = float(input())
    b = float(input())
    c = float(input())
    p = (a + b + c) / 2
    print(((p - a) * (p - b) * (p - c) * p) ** 0.5)
elif shape == 'прямоугольник':
    a = float(input())
    b = float(input())
    print(a * b)
elif shape == 'круг':
    r = float(input())
    print(3.14 * r ** 2)

----------------------------------------------------------
 Не помню

a = float(input())
b = float(input())
operation = str(input())

if operation == '-':
    print(a-b)
elif operation == '+':
    print(a+b)
elif operation == '*':
    print(a*b)
elif operation == 'mod':
    if b == 0:
        print("Деление на 0!")
    else:
        print(a%b)
elif operation == 'pow':
    print(a**b)
elif operation == 'div':
    if b == 0:
        print("Деление на 0!")
    else:
        print(a//b)
elif operation == '/':
    if b == 0:
        print("Деление на 0!")
    else:
        print(a/b)

----------------------------------------------------------
 На вход программе подаётся строка из шести цифр
Билет считается счастливым, если сумма первых трех цифр совпадает с 
суммой последних трех цифр номера. 
"Счастливый", если суммы совпадают, и "Обычный", если суммы различны

b = input(090234)
a0 = int(b[0])
a1 = int(b[1])
a2 = int(b[2])
a3 = int(b[3])
a4 = int(b[4])
a5 = int(b[5])

if (a0 + a1 + a2) == (a3 + a4 + a5):
    print('Счастливый')
else:
    print('Обычный')

-----------------------------------------------------------
 Выводит все нечетные числа от 5 до 55
a = 5
while a <= 55:
    print(a, end=',')
    a +=2

-----------------------------------------------------------
Напишите программу, которая считывает со стандартного ввода целые числа,
 по одному числу в строке, и после первого введенного нуля выводит
  сумму полученных на вход чисел

a = int(input())
s = 0

while a != 0:
    s += a
    a = int(input())
    
print(s)

-----------------------------------------------------------

Программа должна считывать размеры команд (два положительных целых 
числа a и b, каждое число вводится на отдельной строке) и выводить
 наименьшее число d, которое делится на оба этих числа без остатка.

a = int(input())
b = int(input())
p = a

while p%b != 0:
    p += a 
    
print(p)

---------------------------------------------------------------

Напишите программу, которая считывает целые числа с консоли по одному числу в строке.

Для каждого введённого числа проверить:
если число меньше 10, то пропускаем это число;
если число больше 100, то прекращаем считывать числа;
в остальных случаях вывести это число обратно на консоль в отдельной строке.

i = 0
while i <= 100:
    i = int(input())
    if i < 10:
        continue
    if i > 100:
        break
    print(i)

----------------------------------------------------------------

Когда Павел учился в школе, он запоминал таблицу умножения прямоугольными блоками.
 Для тренировок ему бы очень пригодилась программа, которая показывала бы блок таблицы умножения.

Напишите программу, на вход которой даются четыре числа a, b, c и d, каждое в своей строке.
 Программа должна вывести фрагмент таблицы умножения для всех чисел отрезка [a;b] на все числа отрезка [c;d].

Числа a, b, c и d являются натуральными и не превосходят 10, a≤b, c≤d.

Следуйте формату вывода из примера, для разделения элементов внутри строки используйте
 '\t' — символ табуляции. Заметьте, что левым столбцом и верхней строкой выводятся сами 
 числа из заданных отрезков — заголовочные столбец и строка таблицы.

a = 7#int(input())
b = 10#int(input())
c = 5#int(input())
d = 6#int(input())

for u in range(c,d+1):
    print('\t',u, end='')
for i in range(a,b+1):
    print('\n',i,'\t', end='')
    for v in range(c,d+1):
        print(v * i, end='\t')
print()

----------------------------------------------------------------

Напишите программу, которая считывает с клавиатуры два числа a и b, считает и выводит на консоль среднее 
арифметическое всех чисел из отрезка [a;b], которые делятся на 3.

В приведенном ниже примере среднее арифметическое считается для чисел на отрезке [−5;12]. Всего чисел, 
делящихся на 3, на этом отрезке 6: −3,0,3,6,9,12. Их среднее арифметическое равно 4.5

На вход программе подаются интервалы, внутри которых всегда есть хотя бы одно число, которое делится на 3.﻿

a = int(input())
b = int(input())
s = 0
u = 0
for i in range(a,b + 1):
    if i % 3 == 0:
        s += i
        u += 1
print(s / u)

------------------------------------------------------------------

GC-состав является важной характеристикой геномных последовательностей и определяется как процентное
 соотношение суммы всех гуанинов и цитозинов к общему числу нуклеиновых оснований в геномной последовательности. 

Напишите программу, которая вычисляет процентное содержание символов G (гуанин) и C (цитозин) в введенной 
строке (программа не должна зависеть от регистра вводимых символов).

Например, в строке "acggtgttat" процентное содержание символов G и C равно 410⋅100=40.0, где 4 -- это количество
 символов G и C,  а 10 -- это длина строки.

text = input()
text = text.lower()
G = text.count('g')
C = text.count('c')
L = len(text)
print((G + C) / L * 100)

------------------------------------------------------------------

Узнав, что ДНК не является случайной строкой, только что поступившие в Институт биоинформатики студенты группы 
информатиков предложили использовать алгоритм сжатия, который сжимает повторяющиеся символы в строке.

Кодирование осуществляется следующим образом:
s = 'aaaabbсaa' преобразуется в 'a4b2с1a2', то есть группы одинаковых символов исходной строки заменяются на этот
 символ и количество его повторений в этой позиции строки.

Напишите программу, которая считывает строку, кодирует её предложенным алгоритмом и выводит закодированную 
последовательность на стандартный вывод. Кодирование должно учитывать регистр символов.

letters =input()

c = 0
lc = 0
result = letters[0]

for i in letters:
    if i == result[-1]:
        lc += 1
    elif i != result[-1]:
        result += str(lc)
        result += i
        lc = 1
    if len(letters) == c + 1:
        result += str(lc)
    c += 1
print(result)

------------------------------------------------------------------

Напишите программу, на вход которой подаётся список чисел одной строкой. Программа должна для каждого элемента этого списка вывести сумму двух его соседей. Для элементов списка, являющихся крайними, одним из соседей считается элемент, находящий на противоположном конце этого списка. Например, если на вход подаётся список "1 3 5 6 10", то на выход ожидается список "13 6 9 15 7" (без кавычек).

Если на вход пришло только одно число, надо вывести его же.

Вывод должен содержать одну строку с числами нового списка, разделёнными пробелом.

row = input()
lis = [int(i) for i in row.split()]
string = ''
if len(lis) == 1:
    print(row)
else:
    for i in range(len(lis)):
        string += str(lis[i-1] + lis[(i+1) % len(lis)]) + ' '
    print(string)

------------------------------------------------------------------

Напишите программу, которая принимает на вход список чисел в одной строке и выводит на экран в одну строку значения, которые повторяются в нём более одного раза.

Для решения задачи может пригодиться метод sort списка.

Выводимые числа не должны повторяться, порядок их вывода может быть произвольным.

string = input()
result = []
lisT = [int(i) for i in string.split()]

if len(lisT) == 1 :
    print('')
else:
    for i in range( len(lisT)):
        
        print(x)































